# copied from ripgrep

name: release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  create_release:
    name: create_release
    runs-on: ubuntu-latest
    steps:
      - name: Get the release version from the tag
        if: env.PACKAGE_VERSION == ''
        run: |
          echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.PACKAGE_VERSION }}"

      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          release_name: ${{ env.PACKAGE_VERSION }}

    outputs:
      package_version: ${{ env.PACKAGE_VERSION }}
      release_upload_url: ${{ steps.release.outputs.upload_url }}

  build:
    name: build
    needs: [ create_release ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-musl, aarch64-unknown-linux-musl ]
        include:
          - target: x86_64-unknown-linux-musl
            strip: strip
          - target: aarch64-unknown-linux-musl
            strip: aarch64-linux-musl-strip
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Install cross compile toolchains
        if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
        run: |
          curl -O https://musl.cc/aarch64-linux-musl-cross.tgz
          tar xzf aarch64-linux-musl-cross.tgz
          sudo cp -R aarch64-linux-musl-cross/* /usr

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --locked --target ${{ matrix.target }}


      - name: Build archive
        shell: bash
        run: |
          "${{ matrix.strip }}" "target/${{ matrix.target }}/release/rate_mirrors"
          staging="rate-mirrors-${{ needs.create_release.outputs.package_version }}-${{ matrix.target }}"
          mkdir -p "$staging"

          cp LICENSE "$staging/"
          cp "target/${{ matrix.target }}/release/rate_mirrors" "$staging/"

          tar czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV

      - name: Upload release archive
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_upload_url }}
          asset_path: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream

